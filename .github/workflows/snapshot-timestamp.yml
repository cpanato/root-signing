#
# Copyright 2021 The Sigstore Authors.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

name: Snapshot and Timestamp

permissions: read-all

# Execute this as a biweekly cron job and on changes to repository/
# when new published metadata is submitted.
on:
  # Enable cron for re-signing snapshot and timestamp every week
  schedule:
    - cron: '0 0 */7 * *' # every 7 days
  # When a new root is staged
  push:
    branches:
      - main
    paths:
      - 'repository/staged/root.json'
  workflow_dispatch:
    inputs:
      snapshot_timestamp:
        description: 'Enables snapshot/timestamp step. During ceremonies, you may flip this to false to allow for just a publish step.'
        required: false
        default: true
        type: bool
      publish:
        description: 'Enables publishing step. During ceremonies, you may flip this to false to allow for reviewing changes before publishing.'
        required: false
        default: true
        type: bool
      repo:
        description: 'Sets the repository to perform the operation on: expects relative path to GitHub repository, for example: ceremony/2022-10-03'
        required: false
        default: repository/
        type: string

jobs:
  snapshot_and_timestamp:
    runs-on: ubuntu-20.04
    permissions:
      id-token: 'write'
    steps:
      - uses: actions/checkout@93ea575cb5d8a053eaa0ac8fa3b40d7e05a33cc8 # v3.1.0
        with:
          fetch-depth: 0
      - name: setup
        run: |
          echo "GITHUB_USER=${{ github.actor }}" >> $GITHUB_ENV
          echo "REPO=$(pwd)/${{ inputs.repo }}" >> $GITHUB_ENV
          echo "SNAPSHOT_KEY=gcpkms://projects/sigstore-root-signing/locations/global/keyRings/sigstore-root/cryptoKeys/snapshot" >> $GITHUB_ENV
          echo "TIMESTAMP_KEY=gcpkms://projects/sigstore-root-signing/locations/global/keyRings/sigstore-root/cryptoKeys/timestamp" >> $GITHUB_ENV
          # Note: we set LOCAL=1 because we manually push the changes in the next job.
          echo "LOCAL=1" >> $GITHUB_ENV
      - uses: actions/setup-go@268d8c0ca0432bb2cf416faae41297df9d262d7f # v2.2.0
        with:
          go-version: 1.18.x
      - uses: google-github-actions/setup-gcloud@ee9693ff89cdf73862b8a13988f6a71070e8fc58 # v0.5.1
        with:
          project_id: sigstore-root-signing
      # Setup OIDC->SA auth
      - uses: google-github-actions/auth@dac4e13deb3640f22e3ffe758fd3f95e6e89f712 # v0.7.2
        id: auth
        with:
          token_format: 'access_token'
          workload_identity_provider: 'projects/163070369698/locations/global/workloadIdentityPools/github-actions-pool/providers/github-actions-provider'
          service_account: 'github-actions@sigstore-root-signing.iam.gserviceaccount.com'
          create_credentials_file: true
      - name: Login
        run: |
          gcloud auth login --brief --cred-file="${{ steps.auth.outputs.credentials_file_path }}"
          gcloud auth list

      # Build binary
      - name: build
        run: |
          sudo apt-get install libpcsclite-dev
          go build -o tuf -tags=pivkey ./cmd/tuf/

      # Snapshot and timestamp
      - name: snapshot and timestamp
        if: ${{ github.snapshot_timestamp }}
        run: |
          ./scripts/step-3.sh

      # Publish
      - name: publish
        if: ${{ github.publish }}
        run: |
          ./scripts/step-4.sh
      - name: Upload snapshot and timestamp
        uses: actions/upload-artifact@3cea5372237819ed00197afe530f5a7ea3e805c8 # v2.3.1
        with:
          name: snapshot-and-timestamp
          path: repository/repository/
          retention-days: 5

  if-failed:
    runs-on: ubuntu-latest
    needs: [snapshot_and_timestamp]
    permissions:
      issues: 'write'
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    if: always() && needs.snapshot_and_timestamp.result == 'failure'
    steps:
      - uses: actions/checkout@93ea575cb5d8a053eaa0ac8fa3b40d7e05a33cc8 # v3.1.0
      - run: |
          set -euo pipefail
          ./.github/workflows/scripts/report-failure.sh

  push:
    needs: snapshot_and_timestamp
    runs-on: ubuntu-20.04
    permissions:
      pull-requests: 'write'
      contents: 'write'
    steps:
      - uses: actions/checkout@93ea575cb5d8a053eaa0ac8fa3b40d7e05a33cc8 # v3.1.0
        with:
          fetch-depth: 0
      - uses: actions/download-artifact@fb598a63ae348fa914e94cd0ff38f362e927b741 # v2.1.0
        with:
          name: snapshot-and-timestamp
          path: repository/repository/
      # Open pull request changes
      - name: create pull request
        uses: peter-evans/create-pull-request@671dc9c9e0c2d73f07fa45a3eb0220e1622f0c5f # v4.1.3
        with:
          commit-message: update snapshot and timestamp
          title: Update Snapshot and Timestamp
          body: Sign snapshot and timestamp files
          branch: update-snapshot-timestamp
          signoff: true
          reviewers: asraa,dlorenc,haydentherapper,joshuagl

  if-push-failed:
    runs-on: ubuntu-latest
    needs: [push]
    permissions:
      issues: 'write'
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    if: always() && needs.push.result == 'failure'
    steps:
      - uses: actions/checkout@93ea575cb5d8a053eaa0ac8fa3b40d7e05a33cc8 # v3.1.0
      - run: |
          set -euo pipefail
          ./.github/workflows/scripts/report-failure.sh
